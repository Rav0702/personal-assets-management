services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    depends_on:
      mysqldb:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SIMULATION_CLIENT_ID=${SIMULATION_CLIENT_ID}
      - SIMULATION_CLIENT_SECRET=${SIMULATION_CLIENT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - springboot-mysql-network
      - springboot-redis-network
  mysqldb:
    image: mysql:8.0.33
    ports:
      - 3307:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    command: redis-server --port 6379
    volumes:
      - redis:/data
    networks:
      - springboot-redis-network
volumes:
  mysql-data:
  redis:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network
  springboot-redis-network:
    name: springboot-redis-network
    driver: bridge